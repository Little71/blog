http://www.cnblogs.com/wupeiqi/articles/5702910.html

    1. 运算
        v = 1 and 2 or 3 an 4
    2. 基本数据类型
    
    3. 列表生成式
    
    4. 作用域
    
    5. 函数的参数和返回值
    
    6. 迭代器和生成器
    
    7. 面向对象
        - 继承
        - metaclass
        
        
    8. 异步IO模块
    
    9. 异步非阻塞Web框架
    
    =====================================================
    
    支持异步非阻塞Web框架 - Tornado，Nodejs
    
    异步IO模块：
        我们作为客户端向服务端发起“并发”请求，select监听socket是否已经有变化

        超时
        future = Future()
        # 特殊的形式等待5s
        tornado.ioloop.IOLoop.current().add_timeout(time.time() + 5, self.done)
        yield future

        发送http请求
        from tornado import httpclient
        http = httpclient.AsyncHTTPClient()
        yield http.fetch("http://www.google.com", self.done)
        也是返回一个future对象

        自定义future
        future = Future()
        1. 挂起当前请求，线程可以处理其他请求 *****
        2. future设置值，当前挂起的请求返回

        future改变状态，就返回客户端
    
    http://www.cnblogs.com/wupeiqi/p/6536518.html
    自定义Web框架：
        - 同步
        - 异步






























        
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    