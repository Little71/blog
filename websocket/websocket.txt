https://www.cnblogs.com/wupeiqi/p/6558766.html
    - 概述：
        - Http,  socket实现，短链接，请求响应
        - WebSocket, socket实现，双工通道，请求响应，推送
          本质上是Socket创建连接，不断开。
    - socket入手
    
        - 服务端（socket服务端）
            1. 服务端开启socket，监听IP和端口
            3. 允许连接
            * 5. 服务端接收到特殊值【加密sha1,特殊值,migic string="258EAFA5-E914-47DA-95CA-C5AB0DC85B11"】
            * 6. 加密后的值发送给客户端
            
            
            
            
        - 客户端（浏览器）
            2. 客户端发起连接请求（IP和端口）
            * 4. 客户端生成一个xxx，【加密sha1,特殊值,migic string="258EAFA5-E914-47DA-95CA-C5AB0DC85B11"】,向服务端发送一段特殊值
            * 7. 客户端接收到加密的值
            

	服务端和客户端都对同一个migic string，用同一个算法对随机字符串进行加密，如在客户端对比两个加密结果一致，说明是websocket服务端，不然就是协议不一致
        
        *** 收发数据 ***：

		
0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-------+-+-------------+-------------------------------+
|F|R|R|R| opcode|M| Payload len |    Extended payload length    |
|I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
|N|V|V|V|       |S|             |   (if payload len==126/127)   |
| |1|2|3|       |K|             |                               |
+-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
|     Extended payload length continued, if payload len == 127  |
+ - - - - - - - - - - - - - - - +-------------------------------+
|                               |Masking-key, if MASK set to 1  |
+-------------------------------+-------------------------------+
| Masking-key (continued)       |          Payload Data         |
+-------------------------------- - - - - - - - - - - - - - - - +
:                     Payload Data continued ...                :
+ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
|                     Payload Data continued ...                |
+---------------------------------------------------------------+
		
1、读取第9-15位(包括)并将其解释为无符号整数。如果小于等于125，这就是长度;你就完成了。如果是126，转到第二步。如果是127，转到第三步

2、读取接下来的16位并将其解释为无符号整数。即头部信息在往后延伸16位，即两个字节
		
3、读取后面的64位并将其解释为无符号整数(最重要的位必须是0)，即头部信息往后延伸8个字节，即头部16个字节
		
		
读取和显示数据
如果掩码位已设置(对于客户机到服务器的消息，应该设置为掩码位)（头部），则读取接下来的4个八位(32位)即4个字节（数据前面4个字节，加密的key）;这是遮罩键。一旦有效负载长度和屏蔽键被解码，您就可以继续从套接字中读取该字节数。让我们调用编码的数据和密钥掩码。要进行解码，循环通过已编码的八位元(字节，也就是文本数据的字节字符)和XOR(掩码的第(i模4)个八位元)。伪代码(恰好是有效的JavaScript):		

单位/字节
9-15位 < 126：2 + masking key 4位，后面就是数据
	   = 126：2 + 4 + masking key 4位，后面就是数据
	   = 127：2 + 8 + masking key 4位，后面就是数据
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		